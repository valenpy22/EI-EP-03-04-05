library(pwr)
#2.Si el verdadero volumen medio de los bidones fuera de 10,1 litros, ¿cuál sería
#la probabilidad de que el ingeniero, que obviamente no conoce este dato, cometa
#un error de tipo II? Para responder, agregue al gráfico anterior la verdadera
#distribución muestral de las medias y marquen (con otro color) la zona
#correspondiente a la probabilidad solicitada, para luego, basándose en este
#gráfico, calcular el área correspondiente. También hay ejemplos de este
#procedimiento en la lectura sobre poder estadístico.
#3.Como no se conoce el verdadero volumen medio, genere un gráfico del poder
#estadístico con las condiciones anteriores, pero suponiendo que el verdadero
#volumen medio podría variar de 9,6 a 10,4 litros. Hay un ejemplo de este tipo
#de gráfico en la lectura sobre poder estadístico.
#4.Considerando un volumen medio de 10 litros, ¿cuántos bidones deberían
#revisarse para conseguir un poder estadístico de 0,7 y un nivel de significación de 0,05?
#5.¿Y si el ingeniero fuese muy exigente y quisiera reducir la probabilidad de
#cometer un error de tipo I a un 1% solamente?
# ENUNCIADO
# Se sabe que una máquina que envasa detergentes industriales llena bidones con un
# volumen de producto que sigue una distribución normal con desviación estándar de
# 1 litro. Usando una muestra aleatoria de 100 envases, el ingeniero a cargo de la
# planta requiere determinar si la máquina está llenando los bidones con una media
# de 10 litros.
#1.Si el ingeniero piensa rechazar la hipótesis nula cuando la muestra presente
#una media menor a 9,8 litros o mayor a 10,2 litros, ¿cuál es la probabilidad de
#que cometa un error de tipo I? Para responder, generen un gráfico de la
#distribución muestral de las medias hipotetizada en donde se marquen las zonas
#correspondientes a la probabilidad solicitada, para luego, basándose en este
#gráfico, calcular el área correspondiente. Tome como ejemplo los scripts
#presentados en la lectura sobre poder estadístico.
#Datos
#H0: La máquina llena en promedio 10 litros en cada envase.
#Ha: La máquina llena en promedio una cantidad distinta de 10 litros por envase.
#Ho: mu = mu0, es decir, mu = 10 [L].
#Ha: mu != mu0, es decir, mu != 10 [L].
#La probabilidad de cometer un error de tipo I se relaciona al valor de alfa, teniendo
#en este caso un valor de 0.01, debido a que se ve la diferencia entre los valores entregados
#y la media, dando 0.02. Pero como se trata de una prueba bilateral, este valor debe dividirse por 2,
#dando como resultado 0.01.
#z1: (9.8 - 10)/1 = -0.2
#z1: (10.2 - 10)/1 = 0.2
inferior <- 9.8
superior <- 10.2
media <- 10
sd <- 1
n <- 100
alfa <- 0.05
#Probabilidad de error tipo I
#I = P(Z < -0.2) + P(Z > 0.2)
z1 <- qnorm(alfa/2)
z2 <- qnorm(1 - alfa/2)
prob_error_I <- pnorm(z1) + (1 - pnorm(z2))
cat("1. Probabilidad de error tipo I: ", prob_error_I, "\n")
knitr::opts_chunk$set(echo = TRUE)
library(ggpubr)
library(pwr)
# Fijar valores conocidos
sigma <- 12
alfa <- 0.05
n <- 36
media_nula <- 0
# Calcular el error estándar
SE <- sigma / sqrt(n)
# Graficar la distribución muestral de la media de las diferencias si la hipótesis nula fuera verdadera
x <- seq(-6 * SE, 4 * SE, 0.01)
y <- dnorm(x, mean = media_nula, sd = SE)
df <- data.frame(x, y)  # Crear un DataFrame
g <- ggplot(data = df, aes(x))
g <- g + stat_function(fun = dnorm,
args = list(mean = media_nula, sd = SE),
colour = "red", size = 1)
g <- g + ylab("")
g <- g + scale_y_continuous(breaks = NULL)
g <- g + scale_x_continuous(name = "Diferencia en tiempos de ejecución [ms]",
breaks = seq(-6, 4, 2))
g <- g + theme_pubr()
# Colorear la región de rechazo de la hipótesis nula
Z_critico <- qnorm(alfa/2, mean = media_nula, sd = SE, lower.tail = FALSE)
q_critico_inferior <- media_nula - Z_critico
q_critico_superior <- media_nula + Z_critico
g <- g + geom_area(data = subset(df, x < q_critico_inferior),
aes(y = y),
colour = "red",
fill = "red",
alpha = 0.5)
g <- g + geom_area(data = subset(df, x > q_critico_superior),
aes(y = y),
colour = "red",
fill = "red",
alpha = 0.5)
# Superponer la distribución muestral de la media de las diferencias si la diferencia de medias fuera -4
media_efecto <- -4
g <- g + stat_function(fun = dnorm,
args = list(mean = media_efecto, sd = SE),
colour = "blue", size = 1)
# Colorear la región de la nueva curva situada en la región de rechazo de la curva original
x1 <- seq(-6 * SE, 4 * SE, 0.01)
y1 <- dnorm(x1, mean = media_efecto, sd = SE)  # Usar x1 en lugar de x
g <- g + geom_area(data = subset(data.frame(x1, y1), x1 < q_critico_inferior),  # Usar x1 en lugar de x
aes(x = x1, y = y1),
colour = "blue",
fill = "blue",
alpha = 0.5)
g <- g + geom_area(data = subset(data.frame(x1, y1), x1 > q_critico_superior),  # Usar x1 en lugar de x
aes(x = x1, y = y1),
colour = "blue",
fill = "blue",
alpha = 0.5)
print(g)
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
library(ggpubr)
library(pwr)
# Fijar valores conocidos
sigma <- 12
alfa <- 0.05
n <- 36
media_nula <- 0
# Calcular el error estándar
SE <- sigma / sqrt(n)
# Graficar la distribución muestral de la media de las diferencias si la hipótesis nula fuera verdadera
x <- seq(-6 * SE, 4 * SE, 0.01)
y <- dnorm(x, mean = media_nula, sd = SE)
df <- data.frame(x, y)  # Crear un DataFrame
g <- ggplot(data = df, aes(x))
g <- g + stat_function(fun = dnorm,
args = list(mean = media_nula, sd = SE),
colour = "red", size = 1)
g <- g + ylab("")
g <- g + scale_y_continuous(breaks = NULL)
g <- g + scale_x_continuous(name = "Diferencia en tiempos de ejecución [ms]",
breaks = seq(-6, 4, 2))
g <- g + theme_pubr()
# Colorear la región de rechazo de la hipótesis nula
Z_critico <- qnorm(alfa/2, mean = media_nula, sd = SE, lower.tail = FALSE)
q_critico_inferior <- media_nula - Z_critico
q_critico_superior <- media_nula + Z_critico
g <- g + geom_area(data = subset(df, x < q_critico_inferior),
aes(y = y),
colour = "red",
fill = "red",
alpha = 0.5)
g <- g + geom_area(data = subset(df, x > q_critico_superior),
aes(y = y),
colour = "red",
fill = "red",
alpha = 0.5)
print(g)
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
print(Z_critico) #10.196
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
library(ggpubr)
library(pwr)
# Fijar valores conocidos
sigma <- 12
alfa <- 0.05
n <- 36
media_nula <- 0
# Calcular el error estándar
SE <- sigma / sqrt(n)
# Graficar la distribución muestral de la media de las diferencias si la hipótesis nula fuera verdadera
x <- seq(-6 * SE, 4 * SE, 0.01)
y <- dnorm(x, mean = media_nula, sd = SE)
df <- data.frame(x, y)  # Crear un DataFrame
g <- ggplot(data = df, aes(x))
g <- g + stat_function(fun = dnorm,
args = list(mean = media_nula, sd = SE),
colour = "red", size = 1)
g <- g + ylab("")
g <- g + scale_y_continuous(breaks = NULL)
g <- g + scale_x_continuous(name = "Diferencia en tiempos de ejecución [ms]",
breaks = seq(-6, 4, 2))
g <- g + theme_pubr()
# Colorear la región de rechazo de la hipótesis nula
Z_critico <- qnorm(alfa/2, mean = media_nula, sd = SE, lower.tail = FALSE)
q_critico_inferior <- media_nula - Z_critico
q_critico_superior <- media_nula + Z_critico
g <- g + geom_area(data = subset(df, x < q_critico_inferior),
aes(y = y),
colour = "red",
fill = "red",
alpha = 0.5)
g <- g + geom_area(data = subset(df, x > q_critico_superior),
aes(y = y),
colour = "red",
fill = "red",
alpha = 0.5)
# Superponer la distribución muestral de la media de las diferencias si la diferencia de medias fuera -4
media_efecto <- -4
g <- g + stat_function(fun = dnorm,
args = list(mean = media_efecto, sd = SE),
colour = "blue", size = 1)
# Colorear la región de la nueva curva situada en la región de rechazo de la curva original
x1 <- seq(-6 * SE, 4 * SE, 0.01)
y1 <- dnorm(x1, mean = media_efecto, sd = SE)  # Usar x1 en lugar de x
g <- g + geom_area(data = subset(data.frame(x1, y1), x1 < q_critico_inferior),  # Usar x1 en lugar de x
aes(x = x1, y = y1),
colour = "blue",
fill = "blue",
alpha = 0.5)
g <- g + geom_area(data = subset(data.frame(x1, y1), x1 > q_critico_superior),  # Usar x1 en lugar de x
aes(x = x1, y = y1),
colour = "blue",
fill = "blue",
alpha = 0.5)
print(g)
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
medias_reales <- seq(9.6, 10.4, by = 0.01)
# Vector para almacenar el poder estadístico
poder_estadistico <- numeric(length(medias_reales))
# Hipótesis nula: mu = 10
# Hipótesis alternativa: mu != 10 (bilateral)
# Calcular el poder estadístico para cada media real en el rango
for (i in 1:length(medias_reales)) {
mu_real <- medias_reales[i]
poder <- 1 - pnorm(qnorm(alfa/2, mean = mu_real, sd = sigma) +
abs(mu_real - 10) * sqrt(n)/sigma) +
pnorm(-qnorm(alfa/2, mean = mu_real, sd = sigma) -
abs(mu_real - 10) * sqrt(n)/sigma)
poder_estadistico[i] <- poder
}
# Crear un marco de datos para el gráfico
df <- data.frame(Media_Real = medias_reales, Poder_Estadistico = poder_estadistico)
# Crear el gráfico de poder estadístico
ggplot(data = df, aes(x = Media_Real, y = Poder_Estadistico)) +
geom_line() +
labs(x = "Media Real", y = "Poder Estadístico") +
theme_minimal()
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
medias_reales <- seq(9.6, 10.4, by = 0.01)
# Vector para almacenar el poder estadístico
poder_estadistico <- numeric(length(medias_reales))
# Hipótesis nula: mu = 10
# Hipótesis alternativa: mu != 10 (bilateral)
# Calcular el poder estadístico para cada media real en el rango
for (i in 1:length(medias_reales)) {
mu_real <- medias_reales[i]
poder <- 1 - pnorm(qnorm(alfa/2, mean = mu_real, sd = sigma) +
abs(mu_real - 10) * sqrt(n)/sigma) +
pnorm(-qnorm(alfa/2, mean = mu_real, sd = sigma) -
abs(mu_real - 10) * sqrt(n)/sigma)
poder_estadistico[i] <- poder
}
# Crear un marco de datos para el gráfico
df <- data.frame(Media_Real = medias_reales, Poder_Estadistico = poder_estadistico)
# Crear el gráfico de poder estadístico
ggplot(data = df, aes(x = Media_Real, y = Poder_Estadistico)) +
geom_line() +
labs(x = "Media Real", y = "Poder Estadístico") +
theme_minimal()
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/Desktop/EP03/a.R")
resultado <- power.t.test(n = NULL,
delta = 0,
sd = sigma,
sig.level = 0.05,
power = 0.7,
type = "one.sample",
alternative = "two.sided")
resultado <- power.t.test(n = NULL,
delta = 0.1,
sd = sigma,
sig.level = 0.05,
power = 0.7,
type = "one.sample",
alternative = "two.sided")
print(resultado)
resultado <- power.t.test(n = NULL,
delta = 10,
sd = sigma,
sig.level = 0.05,
power = 0.7,
type = "one.sample",
alternative = "two.sided")
print(resultado)
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
source("~/Desktop/EP03/EP03-respuesta-equipo-7.R")
